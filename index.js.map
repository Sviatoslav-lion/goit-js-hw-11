{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["// pixabay-api.js\nexport const fetchImages = async (query) => {\n    const API_KEY = '48615456-7478b61ba219341e00e1cbdfc'; // ключ API\n    const URL = `https://pixabay.com/api/?key=${API_KEY}&q=${query}&image_type=photo&orientation=horizontal&safesearch=true`;\n  \n    try {\n      const response = await fetch(URL);\n      const data = await response.json();\n      return data.hits; // Повертаємо масив зображень\n    } catch (error) {\n      console.error('Error fetching images:', error);\n      throw new Error('Error fetching images');\n    }\n  };\n","// render-functions.js\n\n// Функція для очищення галереї перед новим пошуком\nexport const clearGallery = () => {\n  const gallery = document.querySelector('.gallery');\n  gallery.innerHTML = ''; // Очищаємо галерею\n};\n\n// Функція для відображення карток зображень\nexport const renderImages = (images) => {\n  const gallery = document.querySelector('.gallery'); //зв'язок з html div з класом gallery\n\n  const markup = images.map(image => {\n    return `\n    <a href=\"${image.largeImageURL}\">\n    <div class=\"gallery-item\">\n      <img src=\"${image.webformatURL}\" alt=\"${image.tags}\" />\n      <div class=\"info\">\n        <p>Likes: ${image.likes}</p>\n        <p>Views: ${image.views}</p>\n        <p>Comments: ${image.comments}</p>\n        <p>Downloads: ${image.downloads}</p>\n      </div>\n    </div>\n  </a>\n    `;\n  }).join('');\n  gallery.innerHTML = markup;\n  \n  // Після того, як зображення додано, потрібно оновити SimpleLightbox\n  const lightbox = new SimpleLightbox('.gallery a');\n  lightbox.refresh();  // Оновлюємо бібліотеку після того, як зображення додано до галереї\n\n  // Додаємо функціонал для відкриття зображення в модальному вікні за допомогою BasicLightbox\n  const galleryItems = document.querySelectorAll('.gallery-item img');\n  \n  galleryItems.forEach(item => {\n    item.addEventListener('click', (event) => {\n      event.preventDefault();\n      const imageURL = item.parentElement.href; // Отримуємо URL великого зображення\n\n      // Відкриваємо зображення в модальному вікні\n      const instance = basicLightbox.create(`\n        <img src=\"${imageURL}\" alt=\"${item.alt}\">\n      `);\n\n      instance.show();\n    });\n  });\n\n};\n\n// Функція для показу повідомлення, якщо нічого не знайдено\nexport const showNoResultsMessage = () => {\n  iziToast.error({\n    title: 'Sorry',\n    message: 'There are no images matching your search query. Please try again!',\n  });\n};\n\n// Функція для показу індикатора завантаження\nexport const showLoadingIndicator = () => {\n  const loader = document.querySelector('.loader');\n  loader.style.display = 'block'; // Показуємо індикатор\n};\n\n// Функція для приховання індикатора завантаження\nexport const hideLoadingIndicator = () => {\n  const loader = document.querySelector('.loader');\n  loader.style.display = 'none'; // Приховуємо індикатор\n};\n","// main.js\nimport { fetchImages } from './js/pixabay-api.js';\nimport { renderImages, clearGallery, showNoResultsMessage, showLoadingIndicator, hideLoadingIndicator } from './js/render-functions.js';\n\n\nconst form = document.querySelector('#search-form');\nconst input = document.querySelector('.search-input');\nconst loader = document.querySelector('.loader'); // Отримуємо індикатор завантаження\nconst gallery = document.querySelector('.gallery'); // Галерея\n\nform.addEventListener('submit', async (event) => {\n  event.preventDefault();\n  const query = input.value.trim();\n\n  if (query === '') return;\n\n  loader.style.display = 'block'; // Показуємо індикатор\n\n  // Очищаємо галерею перед новим пошуком\n  gallery.innerHTML = '';\n\n  try {\n    const images = await fetchImages(query);\n\n    hideLoadingIndicator(); // Приховуємо індикатор завантаження\n\n    if (images.length > 0) {\n      renderImages(images); // Відображаємо зображення\n    } else {\n      showNoResultsMessage(); // Якщо немає результатів\n    }\n  } catch (error) {\n    hideLoadingIndicator(); // Приховуємо індикатор у разі помилки\n    alert('An error occurred while fetching the images.');\n  }\n});"],"names":["fetchImages","query","URL","error","renderImages","images","gallery","markup","image","item","event","imageURL","showNoResultsMessage","hideLoadingIndicator","loader","form","input"],"mappings":"ssBACO,MAAMA,EAAc,MAAOC,GAAU,CAExC,MAAMC,EAAM,qEAA6CD,CAAK,2DAE9D,GAAI,CAGF,OADa,MADI,MAAM,MAAMC,CAAG,GACJ,QAChB,IACb,OAAQC,EAAO,CACd,cAAQ,MAAM,yBAA0BA,CAAK,EACvC,IAAI,MAAM,uBAAuB,CACxC,CACF,ECJUC,EAAgBC,GAAW,CACtC,MAAMC,EAAU,SAAS,cAAc,UAAU,EAE3CC,EAASF,EAAO,IAAIG,GACjB;AAAA,eACIA,EAAM,aAAa;AAAA;AAAA,kBAEhBA,EAAM,YAAY,UAAUA,EAAM,IAAI;AAAA;AAAA,oBAEpCA,EAAM,KAAK;AAAA,oBACXA,EAAM,KAAK;AAAA,uBACRA,EAAM,QAAQ;AAAA,wBACbA,EAAM,SAAS;AAAA;AAAA;AAAA;AAAA,KAKpC,EAAE,KAAK,EAAE,EACVF,EAAQ,UAAYC,EAGH,IAAI,eAAe,YAAY,EACvC,QAAO,EAGK,SAAS,iBAAiB,mBAAmB,EAErD,QAAQE,GAAQ,CAC3BA,EAAK,iBAAiB,QAAUC,GAAU,CACxCA,EAAM,eAAc,EACpB,MAAMC,EAAWF,EAAK,cAAc,KAGnB,cAAc,OAAO;AAAA,oBACxBE,CAAQ,UAAUF,EAAK,GAAG;AAAA,OACvC,EAEQ,KAAI,CACnB,CAAK,CACL,CAAG,CAEH,EAGaG,EAAuB,IAAM,CACxC,SAAS,MAAM,CACb,MAAO,QACP,QAAS,mEACb,CAAG,CACH,EASaC,EAAuB,IAAM,CACxC,MAAMC,EAAS,SAAS,cAAc,SAAS,EAC/CA,EAAO,MAAM,QAAU,MACzB,ECjEMC,EAAO,SAAS,cAAc,cAAc,EAC5CC,EAAQ,SAAS,cAAc,eAAe,EAC9CF,EAAS,SAAS,cAAc,SAAS,EACzCR,EAAU,SAAS,cAAc,UAAU,EAEjDS,EAAK,iBAAiB,SAAU,MAAOL,GAAU,CAC/CA,EAAM,eAAc,EACpB,MAAMT,EAAQe,EAAM,MAAM,KAAI,EAE9B,GAAIf,IAAU,GAEd,CAAAa,EAAO,MAAM,QAAU,QAGvBR,EAAQ,UAAY,GAEpB,GAAI,CACF,MAAMD,EAAS,MAAML,EAAYC,CAAK,EAEtCY,IAEIR,EAAO,OAAS,EAClBD,EAAaC,CAAM,EAEnBO,GAEH,MAAe,CACdC,IACA,MAAM,8CAA8C,CACrD,EACH,CAAC"}